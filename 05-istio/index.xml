<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Istio on TheOrigin</title>
    <link>https://www.1996.live/05-istio/</link>
    <description>Recent content in Istio on TheOrigin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>由 Hugo 强力驱动  •  基于 Dot 主题修改</copyright>
    <lastBuildDate>Thu, 02 Mar 2017 12:00:00 -0500</lastBuildDate>
    
	<atom:link href="https://www.1996.live/05-istio/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>QUIC</title>
      <link>https://www.1996.live/05-istio/chapter-1/</link>
      <pubDate>Tue, 09 Apr 2019 10:58:08 -0400</pubDate>
      
      <guid>https://www.1996.live/05-istio/chapter-1/</guid>
      <description>前言  emmm~,今天是9102年儿童节，都9102年了，你的网站还是万年HTTP吗，Chrome已经看你不爽很久了，得益于Let&amp;rsquo;s Encrypt，现在申请TLS证书变得异常简单。   本文将分享我是如何开启整站HTTPS和QUIC，网上关于QUIC的介绍文章挺多的，既然你在看这篇文章，相信是对QUIC有一定了解的，本文不在做重复介绍相关概念。 网上的很多文章教程略微复杂，本文将带领你从0开始部署，大学生都学得会。 本文使用的浏览器是Chrome73，协议是QUIC43。最终效果如下。  前置条件 虽然说是从0开始，但是你还是得准备一些东西：
 有一定的Linux基础，至少要能跟着做吧~ 拥有或注册一个自己的域名。 拥有一台服务器，需要将域名解析到该服务器。 安装 Docker&amp;amp;Docker-compose环境，这会使整个过程变得非常简单，花几分钟安装Docker是值得的，如果不会的同学，请参考前面的教程，安装Docker。  DNS解析  如果你知道如何配置DNS，可以跳过 主机记录@，记录类型A，记录值你的服务器公网IP地址。 主机记录*，记录类型CNAME，记录值你域名(末尾有个.) 大概就是下面这个样子。   注意  这里我默认你已经安装好了Docker以及Docker-compose，即将会使用到该工具，如果没有正确安装，请看安装这两个工具的教程。 后续操作我是在CentOS7下面进行的，请确保你的账号有足够的权限(root)  准备配置文件  mkdir -p /containers/caddy cd /containers/caddy vi docker-compose.yml
version: &#39;2&#39; services: caddy-server: image: abiosoft/caddy:latest container_name: caddy-server ports: - &amp;quot;443:443/udp&amp;quot; - &amp;quot;443:443&amp;quot; - &amp;quot;80:80&amp;quot; volumes: - &amp;quot;/containers/caddy/Caddyfile:/etc/Caddyfile&amp;quot; - &amp;quot;/containers/caddy/.caddy:/root/.caddy&amp;quot; - &amp;quot;/containers/caddy/log:/root/log&amp;quot; - &amp;quot;/containers/caddy/www:/www&amp;quot; restart: always entrypoint : &amp;quot;tail -f /dev/null&amp;quot;  保存退出</description>
    </item>
    
  </channel>
</rss>